// Generated by CoffeeScript 1.6.3
var Auth, _;

_ = require('underscore');

Auth = (function() {
  function Auth(client) {
    this.client = client;
    console.log("Auth constructor called.");
  }

  Auth.prototype.required_password_params = ['grant_type', 'client_id', 'client_secret', 'username', 'password', 'scope'];

  Auth.prototype.required_code_params = ['grant_type', 'client_id', 'client_secret', 'code', 'redirect_uri'];

  Auth.prototype.authenticate = function(options, callback) {
    var body, config, headers, required;
    console.log("Auth::authenticate called.");
    headers = options.headers != null ? _.defaults(options.headers, this.client.headers) : _.defaults({}, this.client.headers);
    options = _.defaults(options, this.client.options);
    console.log(options);
    console.log(headers);
    required = (function() {
      switch (options.grant_type) {
        case 'password':
          return this.required_password_params;
        case 'authorization_code':
          return this.required_client_params;
      }
    }).call(this);
    console.log("Required params: " + required);
    body = JSON.stringify(this.build_body(options, required));
    config = {
      host: options.host,
      path: "/oauth/token",
      method: "POST",
      port: this.client.port(),
      headers: headers,
      body: body
    };
    return this.client.raw_request(config, callback);
  };

  Auth.prototype.build_body = function(options, required) {
    return _.reduce(required, (function(m, k) {
      console.log("Checking param: " + k);
      if (!options[k]) {
        throw new Error("Authenticate requires '" + k + "' option.");
      }
      m[k] = options[k];
      return m;
    }), {});
  };

  return Auth;

})();

module.exports = Auth;
